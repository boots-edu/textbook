name: Build Textbook

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    # Build job
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install Python and dependencies
              uses: actions/setup-python@v2
              with:
                  python-version: "3.x"
            - name: Setup NPM
              uses: actions/setup-node@v3
            - name: Setup Library
              run: |
                  cd library
                  # Install the library dependencies
                  npm install
                  # First dip into the src/externals/ directory to run make_typescript_defs.py
                  cd src/externals/
                  python make_typescript_defs.py
                  cd ../../
                  # And finish building
                  npm run build
                  cd ../
            - name: Copy Library
              run: |
                  cp library/dist/index.js source/assets/js/boots-library.js
            # - name: Build PDF version
            #   run: |
            #       cd pdf
            #       npm install
            #       npm run build
            #       cd ../
            # - name: Copy PDF
            #   run: |
            #       cp pdf/dist/boots_textbook.pdf source/assets/boots_textbook.pdf
            - name: Build slides
              run: |
                  cd slides/
                  mkdir -p dist
                  pip install -r requirements.txt

                  # TODO: Add "no-overwrite" mode so we can skip nicely formatted slides
                  python build_slides.py "../source/index.md" --output "./dist/" --as-toc --quiet || {
                      echo "Failed to convert ../source/index.md" >&2
                  }

                  cd ../
            - name: Copy slides
              run: |
                  mkdir -p source/assets/slides
                  cp slides/dist/*.pptx source/assets/slides
            - name: Setup source directory
              run: |
                  cd source/
                  cp _config.prod.yml _config.yml
                  cd ../
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Build with Jekyll
              uses: actions/jekyll-build-pages@v1
              with:
                  source: ./source/
                  destination: ./_site
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3

    # Deployment job
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
